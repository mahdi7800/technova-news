<?phpclass CatWidget extends WP_Widget {	function __construct() {		parent::__construct(			'CatWidget', // Base ID			'tnw_cat_widget',			array( 'description' => esc_html__( 'A Foo Widget', 'text_domain' ), ) // Args		);	}	public function widget( $args, $instance ) {		echo $args['before_widget'];		if ( ! empty( $instance['title'] ) ) {			echo $args['before_title'] . apply_filters( 'widget_title', $instance['title'] ) . $args['after_title'];		}		echo '<div class="row g-2">';		$args_cat = [			'taxonomy' => 'category',			'hide_empty' => false,			'exclude' => get_option('_tnw_settings_set')['exclude_category_id'],			'parent' => 0,			'orderby' => 'id',			'order' => 'ASC'		];		$categories = get_categories($args_cat);		$category_class = [			['category'=>'bg-warning','title'=>'text-warning','count'=>'bg-warning'],            ['category'=>'bg-danger' ,'title'=>'text-danger','count'=>'bg-danger'],            ['category'=>'bg-primary','title'=>'text-primary','count'=>'bg-primary'],            ['category'=>'bg-success','title'=>'text-success','count'=>'bg-success']        ];		if ( $categories ) {			$previous_class = null;			foreach ( $categories as $category ) {				$count    = $category->count;				$cat_link = get_category_link( $category->term_id );				$cat_name = esc_html( $category->name );				$random_class = $category_class[array_rand($category_class)];				do {					$random_class = $category_class[array_rand($category_class)];				} while ($random_class['category'] === $previous_class);				$previous_class = $random_class['category'];                echo '<div class="d-flex justify-content-between align-items-center '.$random_class['category'].' bg-opacity-15 rounded p-2 position-relative">';				echo '<h6 class="m-0 '.$random_class['title'].'">' . $cat_name . '</h6>';				echo '<a href="' . $cat_link . '" class="badge '.$random_class['count'].'  stretched-link">' . $count . '</a>';				echo '</div>';			}		}		echo '</div>';		echo $args['after_widget'];	}	/**	 * Back-end widget form.	 *	 * @param array $instance Previously saved values from database.	 *	 * @see WP_Widget::form()	 *	 */	public function form( $instance ) {		$title = ! empty( $instance['title'] ) ? $instance['title'] : esc_html__( 'New title', 'text_domain' );		?>        <p>            <label for="<?php echo esc_attr( $this->get_field_id( 'title' ) ); ?>"><?php esc_attr_e( 'Title:', 'text_domain' ); ?></label>            <input class="widefat" id="<?php echo esc_attr( $this->get_field_id( 'title' ) ); ?>"                   name="<?php echo esc_attr( $this->get_field_name( 'title' ) ); ?>" type="text"                   value="<?php echo esc_attr( $title ); ?>">        </p>		<?php	}	public function update( $new_instance, $old_instance ) {		$instance          = array();		$instance['title'] = ( ! empty( $new_instance['title'] ) ) ? sanitize_text_field( $new_instance['title'] ) : '';		return $instance;	}}function twn_register_widget() {	register_widget( 'CatWidget' );}add_action( 'widgets_init', 'twn_register_widget' );